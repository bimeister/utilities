import type { Config } from '@jest/types';

const transpilingOptions: Config.InitialOptions = {
  testTimeout: 10_000,
  transform: {
    '^.+\\.(ts)$': 'ts-jest'
  },
  preset: 'ts-jest',
  testEnvironment: 'jsdom'
};

const baseConfig: Config.InitialOptions = {
  ...transpilingOptions,
  rootDir: './',
  roots: ['<rootDir>/'],
  globals: {
    'ts-jest': {
      tsconfig: '<rootDir>/../tsconfig.test.json'
    }
  },
  coverageDirectory: '<rootDir>/../coverage',
  preset: 'ts-jest',
  testRegex: '\\.spec\\.ts$',
  moduleFileExtensions: ['ts', 'js'],
  extensionsToTreatAsEsm: ['.ts'],
  projects: [
    {
      ...transpilingOptions,
      displayName: 'common',
      testRegex: '\\/common\\/src\\/.*\\.spec\\.ts$'
    },
    {
      ...transpilingOptions,
      displayName: 'ngxs',
      testRegex: '\\/ngxs\\/src\\/.*\\.spec\\.ts$'
    },
    {
      ...transpilingOptions,
      displayName: 'resize-observable',
      testRegex: '\\/resize-observable\\/src\\/.*\\.spec\\.ts$'
    },
    {
      ...transpilingOptions,
      displayName: 'rxjs',
      testRegex: '\\/rxjs\\/src\\/.*\\.spec\\.ts$'
    }
  ],
  verbose: true,
  collectCoverageFrom: [
    '**/*.ts', // all TypeScript files
    '!**/*.enum.ts', // except non-testable files
    '!**/*.const.ts', // except non-testable files
    '!**/*.interface.ts', // except non-testable files
    '!**/*.type.ts', // except non-testable files
    '!jest.config-base.ts', // except config files
    '!jest.config-pipeline.ts', // except config files
    '!jest.config.ts', // except config files
    '!**/*.spec.ts', // except test files
    '!**/index.ts', // except autogenerated files
    '!**/api.ts' // except autogenerated files
  ]
};

export default baseConfig;
